{
  "title": "ADS 025 Static Table View",
  "cells": [
    {
      "type": "text",
      "data": "<div>When the data is static (e.g. a form), do not use the table view data source protocal. Use VDL instead.</div><div>Checkout the StaticTable app for swipe to delete, reordering, pull to refresh.</div><div>Checkout the ComplexInputScreen app for code example.</div>"
    },
    {
      "type": "text",
      "data": "<h2>Date Pickers</h2>"
    },
    {
      "type": "code",
      "language": "swift",
      "data": "// Say I wanna have two dates, one for beginning of evant and another for end\n// 1. Draw them on storyboard, remember to fix the cell height to 162\n// 2. Set up IBOutlet\n// 3. Set up trackers, so when didSet, isHidden is changed\n\n\tlet checkInDatePickerCellIndexPath = IndexPath(row: 1, section: 2)\n\tlet checkOutDatePickerCellIndexPath = IndexPath(row: 3, section: 2)\n\tvar isCheckInDatePickerShown: Bool = false {\n\t\tdidSet {\n\t\t\tcheckInDatePicker.isHidden = !isCheckInDatePickerShown\n\t\t}\n\t}\n\tvar isCheckOutDatePickerShown: Bool = false {\n\t\tdidSet {\n\t\t\tcheckOutDatePicker.isHidden = !isCheckOutDatePickerShown\n\t\t}\n\t}\n\n// 4. Do some setup in VDL\n\n\tlet midnightToday = Calendar.current.startOfDay(for: Date())\n\tcheckInDatePicker.minimumDate = midnightToday\n\tcheckInDatePicker.date = midnightToday\n\tcheckInDatePicker.maximumDate = midnightToday.addingTimeInterval(31536000)\n\tupdateDateViews()\n\n// 5. Write updateDateView()\n\n\tfunc updateDateViews() {\n\t\tlet dateFormatter = DateFormatter()\n\t\tdateFormatter.dateStyle = .medium\n\t\tcheckInDateLabel.text = dateFormatter.string(from: checkInDatePicker.date)\n\t\tcheckOutDatePicker.minimumDate = checkInDatePicker.date.addingTimeInterval(86400)\n\t\tcheckOutDatePicker.maximumDate = checkInDatePicker.maximumDate?.addingTimeInterval(86400)\n\t\tcheckOutDateLabel.text = dateFormatter.string(from: checkOutDatePicker.date)\n\n\t\t// update related stuff\n\t\tlet daysOfStay = checkOutDatePicker.date.timeIntervalSince(checkInDatePicker.date) / 86400 + 1\n\t\t...\n\t}\n\n// 6. Set up IBAction and link them to both pickers\n\n\t@IBAction func datePickerValueChanged(_ sender: UIDatePicker) {\n\t\tupdateDateViews()\n\t}\n\n// 7. Set row height, so the pickerscan be hidden\n\n\toverride func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {\n\t\tswitch (indexPath.section, indexPath.row) {\n\t\tcase (checkInDatePickerCellIndexPath.section,checkInDatePickerCellIndexPath.row):\n\t\t\tif isCheckInDatePickerShown {\n\t\t\t\treturn 162\n\t\t\t} else {\n\t\t\t\treturn 0\n\t\t\t}\n\t\tcase (checkOutDatePickerCellIndexPath.section, checkOutDatePickerCellIndexPath.row):\n\t\t\tif isCheckOutDatePickerShown {\n\t\t\t\treturn 162\n\t\t\t} else {\n\t\t\t\treturn 0\n\t\t\t}\n\t\tdefault: return 44\n\t\t}\n\t}\n\n// 8. didSelectRow, be aware of the logic, when row - 1 is pressed, change related datePicker shown status, and hide all other pickers, then deselect row and update table view\n\n\toverride func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {\n\n\t\tif indexPath.section == checkInDatePickerCellIndexPath.section &&\n\t\t\tindexPath.row == checkInDatePickerCellIndexPath.row - 1 {\n\t\t\tisCheckOutDatePickerShown = false\n\t\t\tif isCheckInDatePickerShown == true {\n\t\t\t\tisCheckInDatePickerShown = false\n\t\t\t} else {\n\t\t\t\tisCheckInDatePickerShown = true\n\t\t\t}\n\t\t}\n\n\t\tif indexPath.section == checkOutDatePickerCellIndexPath.section &&\n\t\t\tindexPath.row == checkOutDatePickerCellIndexPath.row - 1 {\n\t\t\tisCheckInDatePickerShown = false\n\t\t\tif isCheckOutDatePickerShown == true {\n\t\t\t\tisCheckOutDatePickerShown = false\n\t\t\t} else {\n\t\t\t\tisCheckOutDatePickerShown = true\n\t\t\t}\n\t\t}\n\n\t\ttableView.deselectRow(at: indexPath, animated: true)\n\t\ttableView.beginUpdates()\n\t\ttableView.endUpdates()\n\t}\n\n// 9. Hide them when scrolled\n\n\toverride func scrollViewWillBeginDragging(_ scrollView: UIScrollView) {\n\t\tview.endEditing(true)\n\t\tisCheckInDatePickerShown = false\n\t\tisCheckOutDatePickerShown = false\n\t\ttableView.beginUpdates()\n\t\ttableView.endUpdates()\n\t}"
    }
  ]
}