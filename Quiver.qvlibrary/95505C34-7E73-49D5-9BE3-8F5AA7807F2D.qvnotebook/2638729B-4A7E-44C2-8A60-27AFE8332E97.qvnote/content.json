{
  "title": "Git Notes",
  "cells": [
    {
      "type": "text",
      "data": "<div><div>git commands</div><div><br></div><div><br></div><div>----------Basic----------</div><div><br></div><div>git init</div><div>git commit -m \"first commit\"</div><div>git remote add origin &lt;URL&gt;</div><div>git push -u origin master</div><div>//-u adds upstream tracking reference for argumentless git push pull, push to remote/origin, local master to origin master</div><div>// init repository</div><div><br></div><div>git clone &lt;http&gt;</div><div>// Initialize</div><div><br></div><div>git status</div><div>// check if everything is up-to-date</div><div><br></div><div>git pull</div><div>// Pull in the latest files</div><div><br></div><div>git add file .</div><div>// adds all files</div><div><br></div><div>git add file &lt;filename&gt;</div><div>// adds that file</div><div><br></div><div>git commit -m \"message\"</div><div>// commit on the files just added</div><div><br></div><div>git commit -a -m \"message\"</div><div>// add and commit all files</div><div><br></div><div>git commit</div><div>// multi-line commit</div><div><br></div><div>git push</div><div>// publish the commits</div><div><br></div><div>git push origin HEAD:master</div><div>// push local working branch to origin master</div><div><br></div><div>git push origin &lt;local branch&gt;:&lt;origin branch&gt;</div><div>// push from specific local branch to specific remote branch</div><div><br></div><div>git log --graph</div><div>// graphical representation of commits and branching</div><div><br></div><div>git log --pretty=oneline</div><div>// clean one liner per commit</div><div><br></div><div>git branch &lt;name of new branch&gt;</div><div>// create a new branch so master remains untouched</div><div><br></div><div>git checkout &lt;name of branch&gt;</div><div>// switch to branch</div><div><br></div><div>git checkout -b &lt;name of new branch&gt;</div><div>// create and switch to new branch</div><div><br></div><div>git merge master</div><div>// merge with master, does not have merge commit for fast forward merging</div><div>// good for small feature</div><div><br></div><div>git merge --no-ff &lt;name of branch&gt;</div><div>// merge with master, always have merge commit</div><div>// good for big feature</div><div><br></div><div>git checkout master</div><div>git merge --no-ff &lt;name of branch&gt;</div><div>git push origin master</div><div>// Merge branch into master</div><div><br></div><div>git branch -d &lt;name of branch&gt;</div><div>// delete branch</div><div><br></div><div>git reset</div><div>// undo git add</div><div><br></div><div>git checkout -- &lt;filename&gt;</div><div>// revert all non-staged (before git add) changes to a file</div><div><br></div><div>git reset --hard origin/master</div><div>// remove all non-comitted changes in local for everything, excluding untracked files (files that github already has a version of)</div><div><br></div><div>git stash -u</div><div>// remove all non-comitted changes in local for everything, including untracked files</div><div><br></div><div>git diff &lt;old commit&gt; &nbsp;&lt;new commit&gt; &gt; NAME.patch</div><div>// Find diff and save as patch file</div><div><br></div><div>git apply NAME.patch</div><div>// Apply patch</div><div><br></div><div><br></div><div><br></div><div><br></div><div>----------The Rest----------</div><div><br></div><div>git fetch origin</div><div>git reset --hard origin/master</div><div>// remove all changes in local for tracked files and revert back to the newest version on remote master</div><div><br></div><div>git push origin v1.0</div><div>// push tag v1.0 to remote</div><div><br></div><div>git checkout &lt;commit&gt;</div><div>git checkout master</div><div>// Temp revert back to desired commit then back to current working copy</div><div><br></div><div>git checkout -b &lt;branch name&gt; &lt;commit&gt;</div><div>// Revert back to commit and start new branch there</div><div><br></div><div>git checkout v1.2.3 -- &lt;filename&gt; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>// open file tag v1.2.3</div><div><br></div><div>git checkout stable -- &lt;filename&gt; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>// open file stable branch</div><div><br></div><div>git checkout origin/master -- &lt;filename&gt; &nbsp;</div><div>// open file upstream master</div><div><br></div><div>git checkout HEAD -- &lt;filename&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>// open file current version from the most recent commit</div><div><br></div><div>git checkout HEAD~2 -- &lt;filename&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</div><div>// open file two versions before the most recent commit</div><div><br></div><div>ESC :wq</div><div>// quit manual</div><div><br></div><div><br></div><div>------------------------------------------------------------------------------------------------</div><div>Example</div><div>git clone</div><div>git status</div><div>git pull</div><div>*WORK ON LOCAL BRANCH*</div><div>git commit -a -m \"message in here\"</div><div>git pull</div><div>*resolve all conflicts*</div><div>git push</div></div>"
    }
  ]
}